// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"
)

type MessagePayload interface {
	IsMessagePayload()
}

type UserProfile interface {
	IsUserProfile()
}

type AnswerMessage struct {
	Content    string `json:"content"`
	QuestionID string `json:"questionId"`
}

func (AnswerMessage) IsMessagePayload() {}

type AnswerMessageInput struct {
	Content    string `json:"content"`
	QuestionID string `json:"questionId"`
}

type Chat struct {
	ID                 string    `json:"id"`
	GeneralUserID      string    `json:"generalUserID"`
	ProfessionalUserID string    `json:"professionalUserID"`
	CreatedAt          time.Time `json:"createdAt"`
	UpdatedAt          time.Time `json:"updatedAt"`
	LatestMessage      *Message  `json:"latestMessage,omitempty"`
	GeneralUser        *User     `json:"generalUser"`
	ProfessionalUser   *User     `json:"professionalUser"`
}

type CreateUserInput struct {
	Name         string                    `json:"name"`
	Email        string                    `json:"email"`
	Description  *string                   `json:"description,omitempty"`
	Professional *ProfessionalProfileInput `json:"professional,omitempty"`
	General      *GeneralProfileInput      `json:"general,omitempty"`
}

type GeneralProfile struct {
	Points       int32  `json:"points"`
	Introduction string `json:"introduction"`
}

func (GeneralProfile) IsUserProfile() {}

type GeneralProfileInput struct {
	Points       int32  `json:"points"`
	Introduction string `json:"introduction"`
}

type Message struct {
	ID       string         `json:"id"`
	ChatID   string         `json:"chatId"`
	SenderID string         `json:"senderId"`
	SentAt   time.Time      `json:"sentAt"`
	Payload  MessagePayload `json:"payload,omitempty"`
}

type Mutation struct {
}

type ProfessionalProfile struct {
	ProBadgeURL string `json:"proBadgeUrl"`
	Biography   string `json:"biography"`
}

func (ProfessionalProfile) IsUserProfile() {}

type ProfessionalProfileInput struct {
	ProBadgeURL string `json:"proBadgeUrl"`
	Biography   string `json:"biography"`
}

type PromotionalMessage struct {
	Title     string  `json:"title"`
	Body      string  `json:"body"`
	ActionURL string  `json:"actionUrl"`
	ImageURL  *string `json:"imageUrl,omitempty"`
}

func (PromotionalMessage) IsMessagePayload() {}

type PromotionalMessageInput struct {
	Title     string  `json:"title"`
	Body      string  `json:"body"`
	ActionURL string  `json:"actionUrl"`
	ImageURL  *string `json:"imageUrl,omitempty"`
}

type Query struct {
}

type QuestionMessage struct {
	Content string   `json:"content"`
	Tags    []string `json:"tags,omitempty"`
}

func (QuestionMessage) IsMessagePayload() {}

type QuestionMessageInput struct {
	Content string   `json:"content"`
	Tags    []string `json:"tags,omitempty"`
}

type SendMessageInput struct {
	ChatID      string                   `json:"chatId"`
	SenderID    string                   `json:"senderId"`
	Standard    *StandardMessageInput    `json:"standard,omitempty"`
	Question    *QuestionMessageInput    `json:"question,omitempty"`
	Answer      *AnswerMessageInput      `json:"answer,omitempty"`
	Promotional *PromotionalMessageInput `json:"promotional,omitempty"`
}

type StandardMessage struct {
	Content string `json:"content"`
}

func (StandardMessage) IsMessagePayload() {}

type StandardMessageInput struct {
	Content string `json:"content"`
}

type User struct {
	ID        string      `json:"id"`
	Name      string      `json:"name"`
	Email     string      `json:"email"`
	CreatedAt time.Time   `json:"createdAt"`
	UpdatedAt time.Time   `json:"updatedAt"`
	Profile   UserProfile `json:"profile,omitempty"`
}
